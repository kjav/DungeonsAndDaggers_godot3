[gd_scene load_steps=5 format=2]

[ext_resource path="res://Hud/InventoryItemDisplay.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/frame.png" type="Texture" id=2]
[ext_resource path="res://Hud/ClickableRegion.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "
extends Node2D
export(int, \"Potion\", \"Food\", \"Spell\") var type setget setType, getType

const InventoryItem = preload(\"res://Hud/InventoryItem.tscn\")

#var pos1 = Vector2(130, 140)
#var pos2 = Vector2(355, 140)
#var pos3 = Vector2(580, 140)
func populateInventory():
	var inc = 168.75
	var start = Vector2(130,130)
	var hudCanvasLayer = get_tree().get_current_scene().get_node(\"HudNode\").get_node(\"HudCanvasLayer\")
	var selected = []
	
	if type == \"Potion\":
		selected = GameData.potions
	elif type == \"Food\":
		selected = GameData.foods
	elif type == \"Spell\":
		selected = GameData.spells
	
	for i in range(selected.size()):
		var new_node = InventoryItem.instance()
		new_node.setInstance(selected[i])	
		if type == \"Potion\":
			new_node.instance.connect(\"ItemUsed\", hudCanvasLayer.get_node(\"EventMessageHolder\"), \"_on_PotItem_used\")
		elif type == \"Food\":
			new_node.instance.connect(\"ItemUsed\", hudCanvasLayer.get_node(\"EventMessageHolder\"), \"_on_FoodItem_used\")
		elif type == \"Spell\":
			new_node.instance.connect(\"ItemUsed\", hudCanvasLayer.get_node(\"EventMessageHolder\"), \"_on_SpellItem_used\")
		var row = i / 4
		var col = i % 4
		new_node.position = start + Vector2(inc*col, inc*row)
		hudCanvasLayer.get_node(\"Inventory\").add_child(new_node)

func setType(newType):
	if typeof(newType) == TYPE_STRING:
		type = newType

func selectItem(item):
	emit_signal(\"ItemUsed\", item);
	hideMenu(\"item used\");

func hideMenu(event):
	#untested
	#if event != \"item used\":
		#Audio.playSoundEffect(\"Inventory_Close\", false)
	get_tree().get_current_scene().get_node(\"HudNode\").inventoryOpen = false
	self.queue_free()
	self.hide()

func getType():
	return type"

[node name="Node2D" type="Node2D"]
script = SubResource( 1 )

[node name="Node2D" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 696.849 )

[node name="Node2D8" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 966.474 )

[node name="Node2D3" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 1101.42 )

[node name="Node2D5" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 1506.91 )

[node name="Node2D2" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 831.323 )

[node name="Node2D6" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 1371.89 )

[node name="Node2D4" parent="." instance=ExtResource( 1 )]
position = Vector2( 624.659, 1236.41 )

[node name="Node2D7" parent="." instance=ExtResource( 1 )]
position = Vector2( 623.644, 1643 )

[node name="TextureButton" type="TextureRect" parent="."]
margin_left = 597.897
margin_top = 665.895
margin_right = 2512.9
margin_bottom = 3013.9
rect_scale = Vector2( 0.25, 0.49 )
texture = ExtResource( 2 )

[node name="ClickableRegion" parent="." instance=ExtResource( 3 )]
modulate = Color( 1, 1, 1, 0 )
margin_left = 602.0
margin_top = 659.0
margin_right = 1079.0
margin_bottom = 1820.0
[connection signal="clicked_outside" from="ClickableRegion" to="." method="hideMenu"]
